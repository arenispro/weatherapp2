{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","Date","toDateString","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKACMA,EACC,mCADDA,EAEG,2CAqDMC,MA9Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAaA,OACE,qBAAKC,UAAmC,oBAAfF,EAAQG,MAAwBH,EAAQG,KAAKC,KAAO,GAAM,WAAqB,MAAxG,SACG,iCACE,qBAAKF,UAAW,aAAhB,SACE,uBACEG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,SAAW,SAAAC,GAAC,OAAGT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WArBI,SAAAC,GACG,UAAXA,EAAIC,KACPC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDoB,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACfF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAiBU,oBAAflB,EAAQG,KACjB,gCACG,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,cAA4BF,EAAQqB,KAApC,KAA4CrB,EAAQsB,IAAIC,QAAxD,SACA,qBAAKrB,UAAU,OAAf,UAAuB,IAAIsB,MAAOC,oBAEpC,sBAAKvB,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACGwB,KAAKC,MAAM3B,EAAQG,KAAKC,MAD3B,YAEA,sBAAKF,UAAU,UAAf,cAA2BF,EAAQA,QAAQ,GAAGG,KAA9C,aAGA,SCtCEyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.8617c035.chunk.js","sourcesContent":["import React, {useState} from 'react';\nconst api = {\n   key:\"7b69a8c0ae232af4ca0e1cacf81ef173\",\n   base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\n\n\n\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt=> {\n    if  (evt.key ===\"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res =>res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n  return (\n    <div className={ (typeof weather.main !=\"undefined\") ? ((weather.main.temp > 20) ? 'app warm' : 'app') :'app'} >\n       <main>\n         <div className =\"search-box\">\n           <input \n             type=\"text\"\n             className=\"search-bar\"\n             placeholder=\"Search...\"\n             onChange= {e =>setQuery(e.target.value)}\n             value={query}\n             onKeyPress={search} >\n           </input>\n    </div>\n        {(typeof weather.main !=\"undefined\") ? (\n        <div>\n           <div className=\"location-box\">\n             <div className=\"location\"> {weather.name}, {weather.sys.country}   </div>\n             <div className=\"date\">{new Date().toDateString()}</div>\n           </div>\n           <div className=\"weather-box\"> \n             <div className=\"temp\"> \n               {Math.round(weather.main.temp)}Â°C </div>\n             <div className=\"weather\"> {weather.weather[0].main} </div>\n           </div>\n        </div>\n         ) :('')}\n       </main>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}